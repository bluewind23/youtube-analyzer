"""Add search history and saved items models

Revision ID: 20a0a72c0c89
Revises: 47614d4e283d
Create Date: 2025-07-25 15:17:39.921401

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '20a0a72c0c89'
down_revision = '47614d4e283d'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('saved_items',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('item_type', sa.String(length=50), nullable=False),
    sa.Column('item_value', sa.String(length=500), nullable=False),
    sa.Column('item_display_name', sa.String(length=500), nullable=True),
    sa.Column('saved_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('fk_saved_items_user_id_users'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_saved_items')),
    sa.UniqueConstraint('user_id', 'item_type', 'item_value', name='_user_item_uc')
    )
    op.create_table('search_history',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('query', sa.String(length=500), nullable=False),
    sa.Column('searched_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('fk_search_history_user_id_users'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_search_history'))
    )
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.drop_constraint(batch_op.f('uq_users_google_id'), type_='unique')
        batch_op.drop_constraint(batch_op.f('uq_users_username'), type_='unique')

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.create_unique_constraint(batch_op.f('uq_users_username'), ['username'])
        batch_op.create_unique_constraint(batch_op.f('uq_users_google_id'), ['google_id'])

    op.drop_table('search_history')
    op.drop_table('saved_items')
    # ### end Alembic commands ###
